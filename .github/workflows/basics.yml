# GitHub actions CI/CD pipeline to AWS.

name: My-GitHubActions-Basics
env:
  ElasticBeanstalk_Package_S3: "blade-runner-pipeline"
  ElasticBeanstalk_AppName   : "Test-Pipeline"
  ElasticBeanstalk_EnvName   : "Testpipeline-env"
  DEPLOY_PACKAGE_NAME        : "test_pipeline_${{ github.sha }}.zip"
  AWS_REGION_NAME            : "eu-north-1"
  
# github.sha = The commit SHA that triggered the workflow run.

on:
  push:
    branches: 
      - master
jobs:
  ci_part:
    runs-on: ubuntu-latest
    
    steps:
      - name: Git Clone our repo
        uses: actions/checkout@v1

# It is an official GitHub Action used to check-out a repository so a workflow can access it.
        
      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git


      - name: Configure AWS Credentials
# GitHub script for configuring AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    :  ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key:  ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region           :  ${{ env.AWS_REGION_NAME }}

      - name: Copy Deployment package to S3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.ElasticBeanstalk_Package_S3 }}/

      - name: Finish message
        run: echo "CI Pipeline finished without issues (but who knows :D)"

  cd_part:
    runs-on: ubuntu-latest
    needs: [ci_part]
    
    steps:

      - name: Configure AWS Credentials
# GitHub script for configuring AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    :  ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key:  ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region           :  ${{ env.AWS_REGION_NAME }}

      - name: Create new ElasticBeanstalk Application Version
        run : |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.ElasticBeanstalk_AppName }} \
          --source-bundle S3Bucket="${{ env.ElasticBeanstalk_Package_S3 }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CoimmitSHA-${{ github.sha }}"
       
      - name: Deploy new ElasticBeanstalk Application Version
        run : aws elasticbeanstalk update-environment --environment-name ${{ env.ElasticBeanstalk_EnvName }} --version-label "Ver-${{ github.sha }}"
      
      
      - name: Finish message
        run: echo "CD Pipeline finished without issues (probably :D)"
